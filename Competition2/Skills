#region VEXcode Generated Robot Configuration
from vex import *
import urandom

# Brain should be defined by default
brain=Brain()

# Robot configuration code
leftsideFront = Motor(Ports.PORT18, GearSetting.RATIO_18_1, True)
leftsideMiddle = Motor(Ports.PORT2, GearSetting.RATIO_18_1, False)
leftsideBack = Motor(Ports.PORT16, GearSetting.RATIO_18_1, True)
leftside = MotorGroup(leftsideFront, leftsideMiddle, leftsideBack)
rightsideFront = Motor(Ports.PORT19, GearSetting.RATIO_18_1, False)
rightsideMiddle = Motor(Ports.PORT5, GearSetting.RATIO_18_1, True)
rightsideBack = Motor(Ports.PORT7, GearSetting.RATIO_18_1, False)
rightside = MotorGroup(rightsideFront, rightsideMiddle, rightsideBack)

# Bottom INtake : 10
bottomIntake = Motor(Ports.PORT10, GearSetting.RATIO_18_1, False)
topIntake = Motor(Ports.PORT8, GearSetting.RATIO_6_1, True)

fullIntake = MotorGroup(bottomIntake,topIntake)
#Top: 8
mogomech = DigitalOut(brain.three_wire_port.c)
bot = DriveTrain(rightside, leftside, 110, 12.75, 12, INCHES)
controller_1 = Controller(PRIMARY)


# wait for rotation sensor to fully initialize
wait(30, MSEC)


# Make random actually random
def initializeRandomSeed():
    wait(100, MSEC)
    random = brain.battery.voltage(MV) + brain.battery.current(CurrentUnits.AMP) * 100 + brain.timer.system_high_res()
    urandom.seed(int(random))
      
# Set random seed 
initializeRandomSeed()


def play_vexcode_sound(sound_name):
    # Helper to make playing sounds from the V5 in VEXcode easier and
    # keeps the code cleaner by making it clear what is happening.
    print("VEXPlaySound:" + sound_name)
    wait(5, MSEC)

# add a small delay to make sure we don't print in the middle of the REPL header
wait(200, MSEC)
# clear the console to make sure we don't have the REPL in the console
print("\033[2J")

def joystickDrive():
    while True:
        leftside.set_velocity(controller_1.axis1.position() + controller_1.axis3.position(),PERCENT)
        rightside.set_velocity(controller_1.axis3.position() - controller_1.axis1.position(),PERCENT)
        leftside.spin(FORWARD)
        rightside.spin(FORWARD)

def nonDriveComponents():
    def activateMogo():
        mogomech.set(True)

    def deactivateMogo():
        mogomech.set(False)

    def startIntake():
        fullIntake.set_velocity(100,PERCENT)
        fullIntake.spin(FORWARD)

    def stopIntake():
        fullIntake.stop()

    def reverseIntake():
        fullIntake.set_velocity(100,PERCENT)
        fullIntake.spin(REVERSE)
    
    controller_1.buttonR2.pressed(startIntake)
    controller_1.buttonR1.pressed(reverseIntake)
    controller_1.buttonL2.pressed(stopIntake)
    controller_1.buttonY.pressed(activateMogo)
    controller_1.buttonB.pressed(deactivateMogo)

def rumbleBumble():
    while True:
        if brain.timer.time(SECONDS) == 10:
            controller_1.rumble(".....")
        if brain.timer.time(SECONDS) == 20:
            controller_1.rumble("....")
        if brain.timer.time(SECONDS) == 30:
            controller_1.rumble("...")
        if brain.timer.time(SECONDS) == 40:
            controller_1.rumble("..")
        if brain.timer.time(SECONDS) == 50:
            controller_1.rumble(".")

driveThread = Thread(joystickDrive)
nonDriveComponentsThread = Thread(nonDriveComponents)
rumbleBumbleThread = Thread(rumbleBumble)
